{
  "name": "gemini-cli-vscode-ide-companion",
  "displayName": "Gemini CLI VSCode IDE Companion",
  "description": "",
  "version": "0.0.2",
  "publisher": "google",
  "icon": "assets/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/google-gemini/gemini-cli.git",
    "directory": "packages/vscode-ide-companion"
  },
  "engines": {
    "vscode": "^1.101.0"
  },
  "categories": [
    "AI",
    "Chat",
    "Other"
  ],
  "contributes": {
    "views": {
      "gemini-agent": [
        {
          "id": "gemini-agent-chat",
          "name": "Gemini Agent",
          "type": "webview"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "gemini-agent",
          "title": "Gemini Agent",
          "icon": "$(robot)"
        }
      ]
    },
    "commands": [
      {
        "command": "gemini-agent.newChat",
        "title": "New Chat",
        "icon": "$(add)"
      },
      {
        "command": "gemini-agent.clearChat",
        "title": "Clear Chat",
        "icon": "$(clear-all)"
      },
      {
        "command": "gemini-agent.openSettings",
        "title": "Open Settings",
        "icon": "$(settings-gear)"
      },
      {
        "command": "gemini-agent.reinitialize",
        "title": "Reload Configuration",
        "icon": "$(refresh)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "gemini-agent.newChat",
          "when": "view == gemini-agent-chat",
          "group": "navigation"
        },
        {
          "command": "gemini-agent.clearChat",
          "when": "view == gemini-agent-chat",
          "group": "navigation"
        },
        {
          "command": "gemini-agent.openSettings",
          "when": "view == gemini-agent-chat",
          "group": "navigation"
        },
        {
          "command": "gemini-agent.reinitialize",
          "when": "view == gemini-agent-chat",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Gemini Agent",
      "properties": {
        "gemini-agent.provider": {
          "type": "string",
          "enum": [
            "gemini",
            "openai"
          ],
          "default": "gemini",
          "description": "AI model provider to use"
        },
        "gemini-agent.authType": {
          "type": "string",
          "enum": [
            "oauth",
            "api_key"
          ],
          "default": "oauth",
          "description": "Authentication method for Gemini API"
        },
        "gemini-agent.model": {
          "type": "string",
          "default": "gemini-2.5-pro",
          "description": "Model to use (e.g., gemini-2.5-pro, gpt-4, gpt-3.5-turbo)"
        },
        "gemini-agent.openai.apiUrl": {
          "type": "string",
          "default": "https://api.openai.com/v1",
          "description": "OpenAI API base URL (or compatible endpoint)"
        },
        "gemini-agent.openai.apiKey": {
          "type": "string",
          "default": "",
          "description": "OpenAI API Key (stored securely)"
        },
        "gemini-agent.openai.organization": {
          "type": "string",
          "default": "",
          "description": "OpenAI Organization ID (optional)"
        },
        "gemini-agent.maxTokens": {
          "type": "number",
          "default": 8192,
          "description": "Maximum tokens for model responses"
        },
        "gemini-agent.temperature": {
          "type": "number",
          "default": 0.7,
          "minimum": 0,
          "maximum": 2,
          "description": "Temperature for model responses"
        }
      }
    }
  },
  "main": "./dist/extension.js",
  "scripts": {
    "vscode:prepublish": "npm run check-types && npm run lint && node esbuild.js --production",
    "build": "npm run compile",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "vsce package --no-dependencies",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "echo \"vscode-ide-companion has no tests yet\"",
    "test:ci": "echo \"vscode-ide-companion has no tests yet\""
  },
  "devDependencies": {
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/node": "^20.19.9",
    "@types/vscode": "^1.101.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.15.1",
    "cors": "^2.8.5",
    "express": "^5.1.0",
    "openai": "^4.73.1",
    "zod": "^3.25.76"
  }
}
